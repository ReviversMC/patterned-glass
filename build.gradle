plugins {
	id 'fabric-loom'
    id 'io.github.juuxel.loom-quiltflower'
	id "checkstyle"
}


sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17


archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group


checkstyle {
	configFile = project.file("checkstyle.xml")
	toolVersion = project.checkstyle_version
}


repositories {
    if (project.use_third_party_mods == "true") {
        maven {
            name = "Modrinth"
            url = "https://api.modrinth.com/maven"
            content {
                includeGroup "maven.modrinth"
            }
        }
        maven {
            url = "https://cursemaven.com"
            content {
                includeGroup "curse.maven"
            }
        }
    }
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/releases"
    }
    mavenCentral()
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader_version}"

    // Required Fabric API modules
    modImplementation(fabricApi.module("fabric-api-base", project.fabric_api_version))
    modImplementation(fabricApi.module("fabric-item-api-v1", project.fabric_api_version))
    modImplementation(fabricApi.module("fabric-item-groups-v0", project.fabric_api_version))
    modImplementation(fabricApi.module("fabric-blockrenderlayer-v1", project.fabric_api_version))
    modImplementation(fabricApi.module("fabric-object-builder-api-v1", project.fabric_api_version))


    if (project.use_third_party_mods == "true") {
        configurations {
            modRuntimeOnly {
                transitive = true
                exclude module: "fabric-loader"
            }
        }

		// Use the full Fabric API while debugging, as transitive deps aren't always defined corretctly
		modRuntimeOnly "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

    	modRuntimeOnly "com.terraformersmc:modmenu:${project.modmenu_version}"
        modRuntimeOnly "maven.modrinth:lazydfu:${project.lazydfu_version}"
        modRuntimeOnly "maven.modrinth:sodium:${project.sodium_version}"
        runtimeOnly "org.joml:joml:${project.sodium_joml_version}"
        modRuntimeOnly "maven.modrinth:lithium:${project.lithium_version}"
        modRuntimeOnly "maven.modrinth:starlight:${project.starlight_version}"
        modRuntimeOnly "maven.modrinth:ferrite-core:${project.ferrite_core_version}"
        modRuntimeOnly "maven.modrinth:smoothboot-fabric:${project.smoothboot_version}"
        modRuntimeOnly "curse.maven:no-fade-452768:${project.no_fade_version}"
    }
}


processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
    // Ensure that the encoding is set to UTF-8, no matter what the system default is.
    // This fixes some edge cases with special characters not displaying correctly,
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html.
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

	it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
	from "LICENSE"
}
